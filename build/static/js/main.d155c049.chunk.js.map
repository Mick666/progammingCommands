{"version":3,"sources":["services/notes.js","App.js","index.js"],"names":["getAll","axios","get","then","response","data","create","newObject","console","log","post","update","id","put","Filter","value","onChangeFunction","onChange","PersonForm","name","number","nameOnChange","numberOnChange","onSubmission","onSubmit","type","Persons","persons","deleteFunction","map","person","i","key","style","display","className","command","description","data-key","data-name","onClick","height","marginLeft","marginTop","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setSearch","peopleToShow","setVisibleNames","errorMessage","setErrorMessage","notificationName","setNotificationName","useEffect","noteService","initialPersons","Notification","message","event","target","searchTerm","filteredPersons","filter","toLowerCase","indexOf","preventDefault","nameMatch","find","newPerson","window","confirm","updatedPerson","setTimeout","catch","error","addedPerson","concat","dataset","deleteEntry","_","updatedList","n","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d155c049.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/commands'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n\nconst create = newObject => {\n  console.log(newObject)\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport './index.css'\n\nconst Filter = ({value, onChangeFunction}) => {\n  return (\n    <input value={value} onChange={onChangeFunction} />\n  )\n}\n\nconst PersonForm = ({name, number, nameOnChange, numberOnChange, onSubmission}) => {\n  return (\n    <div>\n      <form onSubmit={onSubmission}>\n        <div>\n        Command: <input value={name} onChange={nameOnChange} />\n        </div>\n        <div>\n        Description: <input value={number} onChange={numberOnChange} />\n        </div>\n        <button type=\"submit\">Add</button>\n      </form>\n    </div>\n  )\n}\n\nconst Persons = ({persons, deleteFunction}) => {\n  return (\n    <div>\n      {persons.map((person, i) => \n        <div key={i} style={{display: \"flex\"}}>\n          <p className={\"command\"}>{person.command} </p> <p className={\"description\"}> {person.description} </p>\n          <button \n          data-key={person.id} \n          data-name={person.name}\n          onClick={deleteFunction} \n          style={{height: \"20px\", marginLeft: \"10px\", marginTop: \"15px\"}}>Delete</button>\n        </div>\n        )}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newSearch, setSearch] = useState('')\n  const [ peopleToShow, setVisibleNames] = useState(persons)\n  const [ errorMessage, setErrorMessage] = useState(null)\n  const [notificationName, setNotificationName] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n        setVisibleNames(initialPersons)\n      })\n  },  [])\n\n  const addName = (event) => {\n    event.preventDefault();\n    const nameMatch = persons.find(person => person.name === newName);\n    const newPerson = {\n      command: newName,\n      description: newNumber,\n    }  \n\n    if (nameMatch && window.confirm(`${newName} is already added to the phone book. \n    Replace the old number with the new number?`)) {\n      noteService\n        .update(newPerson)\n        .then(updatedPerson => {\n          setPersons(persons.map(person => person.id !== nameMatch.id ? person : updatedPerson))\n          setVisibleNames(persons.map(person => person.id !== nameMatch.id ? person : updatedPerson))\n          setNotificationName(`Updated ${newPerson.name}`)\n          setTimeout(() => {\n            setNotificationName(null)\n          }, 5000)\n        }).catch(error => {\n          setErrorMessage(error.response.data)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n      return;\n    } \n\n    noteService\n    .create(newPerson)\n    .then(addedPerson => {\n        setPersons(persons.concat(addedPerson))\n        setVisibleNames(persons.concat(addedPerson))\n        setNotificationName(`Added ${newPerson.name}`)\n        setTimeout(() => {\n          setNotificationName(null)\n        }, 5000)\n    }).catch(error => {\n      setErrorMessage(error.response.data.error)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value)\n    const searchTerm = event.target.value\n    const filteredPersons = persons.filter(person => person.name.toLowerCase().indexOf(searchTerm.toLowerCase()) === 0)\n    setVisibleNames(filteredPersons)\n  }\n\n  const Notification = ({ message, className }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={className}>\n        {message}\n      </div>\n    )\n  }\n\n  const deleteNumber = (event) => {\n    const name = event.target.dataset.name\n    if (window.confirm(`Delete ${name}?`)) {\n      const id = event.target.dataset.key;\n      noteService\n      .deleteEntry(id)\n      .then(_ => {\n        const updatedList = persons.filter(n => n.id !== id)\n        setPersons(updatedList)\n        setVisibleNames(updatedList)\n      }).catch(error => {\n        setErrorMessage(\n          `Information of ${name} has already been removed from the server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={notificationName} className={\"notification\"}/>\n      <Notification message={errorMessage} className={\"error\"} />\n      <h2>Programming commands</h2>\n      <h3>Search the list</h3>\n      <Filter value={newSearch} onChangeFunction={handleSearch} />\n      <h3>Add to the list</h3>\n      <PersonForm \n        name={newName}\n        number={newNumber}\n        nameOnChange={handleNameChange}\n        numberOnChange={handleNumberChange}\n        onSubmission={addName}\n      />\n      <h2>Commands</h2>\n      <Persons \n        persons={peopleToShow}\n        deleteFunction={deleteNumber}\n      />\n    </div>\n  )\n} \nexport default App ","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}